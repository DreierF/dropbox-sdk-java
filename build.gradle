apply plugin: 'maven'
apply plugin: 'com.github.ben-manes.versions'

group = 'com.dropbox.core'
archivesBaseName = 'core-android'
version = '2.1.2'

ext {
    mavenName = 'Inofficial Dropbox Android library'
    generatedSources = file("$buildDir/generated-sources")
    generatedResources = file("$buildDir/generated-resources")
    authInfoPropertyName = 'com.dropbox.test.authInfoFile'
    basePom = pom {
        name = mavenName
        artifactId = archivesBaseName
        project {
            description 'Inofficial Android client library for the Dropbox API.'
            packaging 'aar'
            url 'https://www.dropbox.com/developers/core'

            scm {
                connection 'scm:git:git@github.com:DreierF/dropbox-sdk-java.git'
                developerConnection 'scm:git:git@github.com:DreierF/dropbox-sdk-java.git'
                url 'https://github.com/DreierF/dropbox-sdk-java'
            }

            developers {
                developer {
                    id 'dropbox-api-team'
                    name 'Dropbox API Team'
                    email 'api-support@dropbox.com'
                    organization = 'Dropbox'
                }
            }

            licenses {
                license {
                    name 'MIT'
                    url 'http://opensource.org/licenses/MIT'
                    distribution 'repo'
                }
            }
        }
    }
}

buildscript {
    repositories {
        jcenter()
    }

    dependencies {
        classpath 'com.github.ben-manes:gradle-versions-plugin:0.12.0'
        classpath 'com.dropbox.maven:pem-converter-maven-plugin:1.0'
        classpath 'com.android.tools.build:gradle:2.2.2'
        classpath 'com.getkeepsafe.dexcount:dexcount-gradle-plugin:0.6.1'
    }
}

allprojects {
    repositories {
        jcenter()
    }
}

// reject dependencyUpdates candidates with alpha or beta in their names:
dependencyUpdates.resolutionStrategy = {
    componentSelection { rules ->
        rules.all { ComponentSelection selection ->
            boolean rejected = ['alpha', 'beta', 'rc'].any { qualifier ->
                selection.candidate.version ==~ /(?i).*[.-]${qualifier}[.\d-]*/
            }
            if (rejected) {
                selection.reject('Release candidate')
            }
        }
    }
}
